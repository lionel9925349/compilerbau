type A = array [10] of int;
type AA = array[12] of A;
type B = int;
type C = B;
type D = array[12] of B;
type E = array[23] of D;
type F = array[18] of E;
type G = array[9] of array[8] of array[7] of array[6] of array[5] of int;


proc main() {
    var a : A;
    var aa: AA;
    var b : int;
    var h : array[32] of int;
    var c : D;
    var d : E;
    var e : G;
    var ee : E;
    var f : F;
    var g : G;
    var i : array[12] of array[12] of int;
    var j : int;
    var k : int;
    var m : int;
    var n : int;
    j := 45;
    m := 23;
    //n := h;
    a[1] := h[3 * 2 - 1 + (1 - 1)]; // arrayAccess with index as binary expression
    a[2]:= i[a[h[2]]][9];
    b := 3 + 44 - 321 + j + 3 - 4 + 2;
    g[1][2][3][4][5]:= 3 + 23 - 3;
    k := 3;
    g[1][2][3][4][5]:= 0xA;

    hi(3, 5 + 3 - 23 + 2 - 2);
    promise(aa[1], b, c, f, g, b);
    func1(2 + 2125 - 1, 3, 4 + 23 - 232 + 21 - 282 + 23 - 222 - 1);
    func2(5, k, m);

    { ; ; ; }

    if(2+2>0){
        printi(100);
    }
    else{
        printi(200);
        if(4*4<16){
        printi(300);
        }
        else{
        printi(400);
        }
    }

    if(b>10){
        printi(b);
        if(b-1>10){
            printi(b-1);
            if(b-2>10){
                printi(b-2);
                if(b-3>10){
                    printi(b-3);
                }
                else{
                   printi(b*3);
                }
                printi(b-2);
            }
            else{
                printi(b*2);
            }
            printi(b-1);
        }
        else{
            printi(b*1);
        }
        printi(b);
    }

    while(j>0){
        if(a[j - 1] > a[j]){
            while(m>0){
                printi(j);
                j:=j-1;
                if(j = 5){
                    printi(j);
                    if( j+1 < 10){
                        printi(8+2+1);
                        if(j+2 < 20){
                            printi(8+2);
                            if(j+5 > 10){
                                printi(5+10);
                            }
                            else {
                                if(j+6>20){
                                printi(6);
                                }
                                if(j+8 > 30){
                                printi(8);
                                }
                                printc('D');
                            }
                            printc('C');
                        }
                        printc('B');
                    }
                    printc('A');
                }
                else{
                    printi(100);
                }
            }
        }
    }

    k:= j+b;
    m := (m+(m+(m+(m+(m+(m+(m+(m+(m+(m+(m+(m+(m+(m+ 0))))))))))))));
   exit();
}

proc promise(ref x : A, y : B, ref z : D, ref xa : F,ref xb : G, ref xc : int){
    var ko : int;
    var wa : int;
    var ls : int;

    ko := 2;
    wa := 34;
    ls := 12;

    ls := ko + wa;
    z[3] := y + xc;

}

proc hi(a : int, b : int){
    a:= a + b;
}

proc func1(ab : int , ac : int , ad : int ){
    var las : array[20] of int;
    las[2]:=1;
    ab := ac + ad + las[2];
    hi(2,4);
    func2(2,las[2],ab);
}

proc func2(ae : int , ref af : int , ref ag : int ){
    var last : int;
    last:=3;
    ae := af + ag + last;
}
